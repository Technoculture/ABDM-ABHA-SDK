# coding: utf-8

"""
ABHA Service

It is important to standardize the process of identification of an individual across healthcare providers, to ensure that the created medical records are issued to the right individual or accessed by a Health Information User through appropriate consent.  In order to issue an ABHA Number to an individual, one only needs basic demographic details like Name, Year of Birth, Gender. In addition, citizens should be able to update contact information easily.  The ABHA Number will be used for the purposes of uniquely identifying persons and authenticating them. An ABHA Address will be used for threading their health records (only with the informed consent of the patient) across multiple systems and stakeholders.   <b>API Security</b>  You need Authorization Token and X-HIP-ID to consume APIs. <b>Notes:</b>  <b>1. In case you want to consume the ABHA APIs and use creation on your own interface, use authentication methods as OTP only. </b> <b>2. In order to have access to ABHA APIs, your clientId must have hid role in gateway. So if you want access to these APIs then please request it in your ABDM on-boarding request.</b> <b>3. In order to have access to Integrated Programs ABHA APIs, your clientId must have integrated_program role in gateway. So if you want access to these APIs then please request it in your ABDM on-boarding request. Also you will need to share integrated program benefit name to be used in this case.</b> <b>4. When calling APIs, please ensure that Authorization header must have format as <i>Bearer {Token_Value}</i>. Please note that prefix Bearer is followed by space before the token value.</b> <b>5. Check the state and district codes from LGD directory [click here](https://lgdirectory.gov.in/)</b>  <b>6. For the APIs </b>  - Sensitive data (Data like OTP, Aadhaar Number, Password, Username etc) have to be encrypted. - Data is encrypted by the public certificate. The certificate can be downloaded from the __/v1/auth/cert__ API under __Authentication__ tag. - RSA Encryption to encrypt the data. Cipher Type - <b>RSA/ECB/PKCS1Padding</b>.  online tool to encrypt data [click here](https://www.devglan.com/online-tools/rsa-encryption-decryption)  <b>

The version of the OpenAPI document: 1.0
Generated by OpenAPI Generator (https://openapi-generator.tech)

Do not edit the class manually.
"""  # noqa: E501

from pydantic import validate_call, Field, StrictFloat, StrictStr, StrictInt
from typing import Any, Dict, List, Optional, Tuple, Union
from typing_extensions import Annotated

from abha.models.aadhar_otp_generate_request_pay_load import (
    AadharOtpGenerateRequestPayLoad,
)
from abha.models.auth_account_aadhaar_otp_request import AuthAccountAadhaarOTPRequest
from abha.models.generate_mobile_otp_request import GenerateMobileOTPRequest
from abha.models.retrieve_health_id_payload_response import (
    RetrieveHealthIdPayloadResponse,
)
from abha.models.retrive_health_id_mobile_pay_load import RetriveHealthIdMobilePayLoad
from abha.models.txn_response import TxnResponse

from abha.api_client import ApiClient, RequestSerialized
from abha.api_response import ApiResponse
from abha.rest import RESTResponseType


class ForgotABHANumberApi:
    """NOTE: This class is auto generated by OpenAPI Generator
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    def __init__(self, api_client=None) -> None:
        if api_client is None:
            api_client = ApiClient.get_default()
        self.api_client = api_client

    @validate_call
    def generate_aadhar_otp_using_post1(
        self,
        generate_otp_request: Annotated[
            AadharOtpGenerateRequestPayLoad, Field(description="generateOtpRequest")
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TxnResponse:
        """Generate Aadhaar OTP on Registered mobile number

        <b>Explanation</b> - API accepts <b>Aadhaar Number</b> and then generates OTP for linked number as part of Forgot flow.    <b>Request Body</b> - Required    <b>Response</b> - Api Accepts <b>Aadhaar Number</b> and then generates OTP for linked number as part of Forgot flow. Returns <b>Transaction ID</b>.

        :param generate_otp_request: generateOtpRequest (required)
        :type generate_otp_request: AadharOtpGenerateRequestPayLoad
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._generate_aadhar_otp_using_post1_serialize(
            generate_otp_request=generate_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "TxnResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def generate_aadhar_otp_using_post1_with_http_info(
        self,
        generate_otp_request: Annotated[
            AadharOtpGenerateRequestPayLoad, Field(description="generateOtpRequest")
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TxnResponse]:
        """Generate Aadhaar OTP on Registered mobile number

        <b>Explanation</b> - API accepts <b>Aadhaar Number</b> and then generates OTP for linked number as part of Forgot flow.    <b>Request Body</b> - Required    <b>Response</b> - Api Accepts <b>Aadhaar Number</b> and then generates OTP for linked number as part of Forgot flow. Returns <b>Transaction ID</b>.

        :param generate_otp_request: generateOtpRequest (required)
        :type generate_otp_request: AadharOtpGenerateRequestPayLoad
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._generate_aadhar_otp_using_post1_serialize(
            generate_otp_request=generate_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "TxnResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def generate_aadhar_otp_using_post1_without_preload_content(
        self,
        generate_otp_request: Annotated[
            AadharOtpGenerateRequestPayLoad, Field(description="generateOtpRequest")
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Generate Aadhaar OTP on Registered mobile number

        <b>Explanation</b> - API accepts <b>Aadhaar Number</b> and then generates OTP for linked number as part of Forgot flow.    <b>Request Body</b> - Required    <b>Response</b> - Api Accepts <b>Aadhaar Number</b> and then generates OTP for linked number as part of Forgot flow. Returns <b>Transaction ID</b>.

        :param generate_otp_request: generateOtpRequest (required)
        :type generate_otp_request: AadharOtpGenerateRequestPayLoad
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._generate_aadhar_otp_using_post1_serialize(
            generate_otp_request=generate_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "TxnResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _generate_aadhar_otp_using_post1_serialize(
        self,
        generate_otp_request,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if accept_language is not None:
            _header_params["Accept-Language"] = accept_language
        # process the form parameters
        # process the body parameter
        if generate_otp_request is not None:
            _body_params = generate_otp_request

        # set the HTTP header `Accept`
        _header_params["Accept"] = self.api_client.select_header_accept(["*/*"])

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["Authorization", "X-HIP-ID"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/v1/forgot/healthId/aadhaar/generateOtp",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def generate_mobile_otp_using_post(
        self,
        generate_otp_request: Annotated[
            GenerateMobileOTPRequest, Field(description="generateOtpRequest")
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> TxnResponse:
        """Generate Mobile OTP as part of Forgot flow

        <b>Explanation</b> - API accepts <b>Mobile Number</b> and then generates OTP for it.    <b>Request Body</b> - Required    <b>Responce</b> - API Accepts <b>Mobile Number</b> and then generates OTP for it. Returns <b>Transaction ID</b>.

        :param generate_otp_request: generateOtpRequest (required)
        :type generate_otp_request: GenerateMobileOTPRequest
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._generate_mobile_otp_using_post_serialize(
            generate_otp_request=generate_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "TxnResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def generate_mobile_otp_using_post_with_http_info(
        self,
        generate_otp_request: Annotated[
            GenerateMobileOTPRequest, Field(description="generateOtpRequest")
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[TxnResponse]:
        """Generate Mobile OTP as part of Forgot flow

        <b>Explanation</b> - API accepts <b>Mobile Number</b> and then generates OTP for it.    <b>Request Body</b> - Required    <b>Responce</b> - API Accepts <b>Mobile Number</b> and then generates OTP for it. Returns <b>Transaction ID</b>.

        :param generate_otp_request: generateOtpRequest (required)
        :type generate_otp_request: GenerateMobileOTPRequest
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._generate_mobile_otp_using_post_serialize(
            generate_otp_request=generate_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "TxnResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def generate_mobile_otp_using_post_without_preload_content(
        self,
        generate_otp_request: Annotated[
            GenerateMobileOTPRequest, Field(description="generateOtpRequest")
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Generate Mobile OTP as part of Forgot flow

        <b>Explanation</b> - API accepts <b>Mobile Number</b> and then generates OTP for it.    <b>Request Body</b> - Required    <b>Responce</b> - API Accepts <b>Mobile Number</b> and then generates OTP for it. Returns <b>Transaction ID</b>.

        :param generate_otp_request: generateOtpRequest (required)
        :type generate_otp_request: GenerateMobileOTPRequest
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._generate_mobile_otp_using_post_serialize(
            generate_otp_request=generate_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "TxnResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _generate_mobile_otp_using_post_serialize(
        self,
        generate_otp_request,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if accept_language is not None:
            _header_params["Accept-Language"] = accept_language
        # process the form parameters
        # process the body parameter
        if generate_otp_request is not None:
            _body_params = generate_otp_request

        # set the HTTP header `Accept`
        _header_params["Accept"] = self.api_client.select_header_accept(["*/*"])

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["Authorization", "X-HIP-ID"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/v1/forgot/healthId/mobile/generateOtp",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def retrieval_health_id_by_aadhar_using_post(
        self,
        auth_account_aadhaar_otp_request: Annotated[
            AuthAccountAadhaarOTPRequest,
            Field(description="authAccountAadhaarOTPRequest"),
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RetrieveHealthIdPayloadResponse:
        """Verify aadhar OTP sent as part of forget ABHA Number

        <b>Explanation</b> - API accepts <b>OTP</b> and then checks is it Valid as per given Aadhaar Transaction.    <b>Request Body</b> - Required    <b>Responce</b> - Api Accepts <b>OTP</b> then returns ABHA Number and ABHA Address accordingly.

        :param auth_account_aadhaar_otp_request: authAccountAadhaarOTPRequest (required)
        :type auth_account_aadhaar_otp_request: AuthAccountAadhaarOTPRequest
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._retrieval_health_id_by_aadhar_using_post_serialize(
            auth_account_aadhaar_otp_request=auth_account_aadhaar_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "RetrieveHealthIdPayloadResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def retrieval_health_id_by_aadhar_using_post_with_http_info(
        self,
        auth_account_aadhaar_otp_request: Annotated[
            AuthAccountAadhaarOTPRequest,
            Field(description="authAccountAadhaarOTPRequest"),
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RetrieveHealthIdPayloadResponse]:
        """Verify aadhar OTP sent as part of forget ABHA Number

        <b>Explanation</b> - API accepts <b>OTP</b> and then checks is it Valid as per given Aadhaar Transaction.    <b>Request Body</b> - Required    <b>Responce</b> - Api Accepts <b>OTP</b> then returns ABHA Number and ABHA Address accordingly.

        :param auth_account_aadhaar_otp_request: authAccountAadhaarOTPRequest (required)
        :type auth_account_aadhaar_otp_request: AuthAccountAadhaarOTPRequest
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._retrieval_health_id_by_aadhar_using_post_serialize(
            auth_account_aadhaar_otp_request=auth_account_aadhaar_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "RetrieveHealthIdPayloadResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def retrieval_health_id_by_aadhar_using_post_without_preload_content(
        self,
        auth_account_aadhaar_otp_request: Annotated[
            AuthAccountAadhaarOTPRequest,
            Field(description="authAccountAadhaarOTPRequest"),
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Verify aadhar OTP sent as part of forget ABHA Number

        <b>Explanation</b> - API accepts <b>OTP</b> and then checks is it Valid as per given Aadhaar Transaction.    <b>Request Body</b> - Required    <b>Responce</b> - Api Accepts <b>OTP</b> then returns ABHA Number and ABHA Address accordingly.

        :param auth_account_aadhaar_otp_request: authAccountAadhaarOTPRequest (required)
        :type auth_account_aadhaar_otp_request: AuthAccountAadhaarOTPRequest
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._retrieval_health_id_by_aadhar_using_post_serialize(
            auth_account_aadhaar_otp_request=auth_account_aadhaar_otp_request,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "RetrieveHealthIdPayloadResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _retrieval_health_id_by_aadhar_using_post_serialize(
        self,
        auth_account_aadhaar_otp_request,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if accept_language is not None:
            _header_params["Accept-Language"] = accept_language
        # process the form parameters
        # process the body parameter
        if auth_account_aadhaar_otp_request is not None:
            _body_params = auth_account_aadhaar_otp_request

        # set the HTTP header `Accept`
        _header_params["Accept"] = self.api_client.select_header_accept(["*/*"])

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["Authorization", "X-HIP-ID"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/v1/forgot/healthId/aadhaar",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )

    @validate_call
    def retrieval_health_id_by_mobile_using_post(
        self,
        retrive_health_id_mobile_pay_load: Annotated[
            RetriveHealthIdMobilePayLoad,
            Field(description="retriveHealthIdMobilePayLoad"),
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RetrieveHealthIdPayloadResponse:
        """Verify Mobile OTP sent as part of forget ABHA number

        <b>Explanation</b> - API accepts <b>OTP</b> and then checks is it Valid as per given Mobile Transaction.    <b>Request Body</b> - Required    <b>Response</b> - API accepts <b>OTP</b> then returns ABHA Number accordingly.

        :param retrive_health_id_mobile_pay_load: retriveHealthIdMobilePayLoad (required)
        :type retrive_health_id_mobile_pay_load: RetriveHealthIdMobilePayLoad
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._retrieval_health_id_by_mobile_using_post_serialize(
            retrive_health_id_mobile_pay_load=retrive_health_id_mobile_pay_load,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "RetrieveHealthIdPayloadResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        ).data

    @validate_call
    def retrieval_health_id_by_mobile_using_post_with_http_info(
        self,
        retrive_health_id_mobile_pay_load: Annotated[
            RetriveHealthIdMobilePayLoad,
            Field(description="retriveHealthIdMobilePayLoad"),
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> ApiResponse[RetrieveHealthIdPayloadResponse]:
        """Verify Mobile OTP sent as part of forget ABHA number

        <b>Explanation</b> - API accepts <b>OTP</b> and then checks is it Valid as per given Mobile Transaction.    <b>Request Body</b> - Required    <b>Response</b> - API accepts <b>OTP</b> then returns ABHA Number accordingly.

        :param retrive_health_id_mobile_pay_load: retriveHealthIdMobilePayLoad (required)
        :type retrive_health_id_mobile_pay_load: RetriveHealthIdMobilePayLoad
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._retrieval_health_id_by_mobile_using_post_serialize(
            retrive_health_id_mobile_pay_load=retrive_health_id_mobile_pay_load,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "RetrieveHealthIdPayloadResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        response_data.read()
        return self.api_client.response_deserialize(
            response_data=response_data,
            response_types_map=_response_types_map,
        )

    @validate_call
    def retrieval_health_id_by_mobile_using_post_without_preload_content(
        self,
        retrive_health_id_mobile_pay_load: Annotated[
            RetriveHealthIdMobilePayLoad,
            Field(description="retriveHealthIdMobilePayLoad"),
        ],
        accept_language: Optional[StrictStr] = None,
        _request_timeout: Union[
            None,
            Annotated[StrictFloat, Field(gt=0)],
            Tuple[
                Annotated[StrictFloat, Field(gt=0)], Annotated[StrictFloat, Field(gt=0)]
            ],
        ] = None,
        _request_auth: Optional[Dict[StrictStr, Any]] = None,
        _content_type: Optional[StrictStr] = None,
        _headers: Optional[Dict[StrictStr, Any]] = None,
        _host_index: Annotated[StrictInt, Field(ge=0, le=0)] = 0,
    ) -> RESTResponseType:
        """Verify Mobile OTP sent as part of forget ABHA number

        <b>Explanation</b> - API accepts <b>OTP</b> and then checks is it Valid as per given Mobile Transaction.    <b>Request Body</b> - Required    <b>Response</b> - API accepts <b>OTP</b> then returns ABHA Number accordingly.

        :param retrive_health_id_mobile_pay_load: retriveHealthIdMobilePayLoad (required)
        :type retrive_health_id_mobile_pay_load: RetriveHealthIdMobilePayLoad
        :param accept_language:
        :type accept_language: str
        :param _request_timeout: timeout setting for this request. If one
                                 number provided, it will be total request
                                 timeout. It can also be a pair (tuple) of
                                 (connection, read) timeouts.
        :type _request_timeout: int, tuple(int, int), optional
        :param _request_auth: set to override the auth_settings for an a single
                              request; this effectively ignores the
                              authentication in the spec for a single request.
        :type _request_auth: dict, optional
        :param _content_type: force content-type for the request.
        :type _content_type: str, Optional
        :param _headers: set to override the headers for a single
                         request; this effectively ignores the headers
                         in the spec for a single request.
        :type _headers: dict, optional
        :param _host_index: set to override the host_index for a single
                            request; this effectively ignores the host_index
                            in the spec for a single request.
        :type _host_index: int, optional
        :return: Returns the result object.
        """  # noqa: E501

        _param = self._retrieval_health_id_by_mobile_using_post_serialize(
            retrive_health_id_mobile_pay_load=retrive_health_id_mobile_pay_load,
            accept_language=accept_language,
            _request_auth=_request_auth,
            _content_type=_content_type,
            _headers=_headers,
            _host_index=_host_index,
        )

        _response_types_map: Dict[str, Optional[str]] = {
            "200": "RetrieveHealthIdPayloadResponse",
            "201": None,
            "400": "ApiError",
            "401": None,
            "403": None,
            "404": None,
            "422": "ApiError",
            "500": "ApiError",
        }
        response_data = self.api_client.call_api(
            *_param, _request_timeout=_request_timeout
        )
        return response_data.response

    def _retrieval_health_id_by_mobile_using_post_serialize(
        self,
        retrive_health_id_mobile_pay_load,
        accept_language,
        _request_auth,
        _content_type,
        _headers,
        _host_index,
    ) -> RequestSerialized:
        _host = None

        _collection_formats: Dict[str, str] = {}

        _path_params: Dict[str, str] = {}
        _query_params: List[Tuple[str, str]] = []
        _header_params: Dict[str, Optional[str]] = _headers or {}
        _form_params: List[Tuple[str, str]] = []
        _files: Dict[str, Union[str, bytes]] = {}
        _body_params: Optional[bytes] = None

        # process the path parameters
        # process the query parameters
        # process the header parameters
        if accept_language is not None:
            _header_params["Accept-Language"] = accept_language
        # process the form parameters
        # process the body parameter
        if retrive_health_id_mobile_pay_load is not None:
            _body_params = retrive_health_id_mobile_pay_load

        # set the HTTP header `Accept`
        _header_params["Accept"] = self.api_client.select_header_accept(["*/*"])

        # set the HTTP header `Content-Type`
        if _content_type:
            _header_params["Content-Type"] = _content_type
        else:
            _default_content_type = self.api_client.select_header_content_type(
                ["application/json"]
            )
            if _default_content_type is not None:
                _header_params["Content-Type"] = _default_content_type

        # authentication setting
        _auth_settings: List[str] = ["Authorization", "X-HIP-ID"]

        return self.api_client.param_serialize(
            method="POST",
            resource_path="/v1/forgot/healthId/mobile",
            path_params=_path_params,
            query_params=_query_params,
            header_params=_header_params,
            body=_body_params,
            post_params=_form_params,
            files=_files,
            auth_settings=_auth_settings,
            collection_formats=_collection_formats,
            _host=_host,
            _request_auth=_request_auth,
        )
